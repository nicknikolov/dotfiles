-call plug#begin('~/.vim/plugged')

" Navigation
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" UI
Plug 'nicknikolov/dark-matter.vim'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Writing code
"" Javascript
Plug 'pangloss/vim-javascript'
Plug 'moll/vim-node'
Plug 'marijnh/tern_for_vim', { 'do': 'npm install' }
"" GLSL
Plug 'tikhomirov/vim-glsl'
"" Rust
" Plug 'rust-lang/rust.vim'

" Utilities
Plug 'guns/xterm-color-table.vim'
Plug 'tpope/vim-commentary'
Plug 'ervandew/supertab'
Plug 'pbrisbin/vim-mkdir'

call plug#end()

filetype off                  " required!
filetype indent on
filetype plugin indent on

syntax enable
set t_Co=256
set background=dark
colorscheme dark_matter

set ttyfast
set lazyredraw

set number
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set showcmd
set wildmenu
set showmatch
set incsearch
set hlsearch
set matchtime=1
set smartindent
set nowrap
set noerrorbells         " don't beep
set shell=bash
set hidden               " don't complain about unsaved buffers
" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
" If a file is changed outside of vim, automatically reload it without asking
set autoread
" Don't make backups at all
set nobackup
set nowritebackup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
" Update gutter quicker
set updatetime=250

" make netrw look ok
let g:netrw_liststyle = 3
let g:netrw_banner = 0

let mapleader = "\<Space>"

" Match Error '\s\+$'
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" REMAPPINGS

nnoremap <leader>ev :e ~/.vimrc<cr>
nnoremap <leader>so :source ~/.vimrc<cr>

" close buffer without destroying layout
nnoremap <leader>q :bp<bar>sp<bar>bn<bar>bd<CR>

" Console log word under cursor
nnoremap <leader>l yiWo console.log(<esc>pa)<esc>=l

" Cycle buffers
:nnoremap <S-l> :bnext!<CR>
:nnoremap <S-h> :bprevious!<CR>

" Remove trailing whitespaces
nnoremap <silent> <Leader><BS> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let@/=_s<Bar>:nohl<CR>:w<CR>

" When copying and pasting - move to end of selection
vnoremap <silent> y y`]
vnoremap <silent> p p`]
nnoremap <silent> p p`]

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR><CR>

" AUTOCOMMANDS

" Jump to last cursor position unless it's invalid or in an event handler
autocmd BufReadPost *
      \ if line("'\"") > 0 && line("'\"") <= line("$") |
      \   exe "normal g`\" " |
      \ endif

autocmd BufNewFile,BufRead *.json set ft=javascript

" PLUGINS
nnoremap <silent> <leader>f :FZF<cr>

function! s:fzf_statusline()
  " Override statusline as you like
  highlight fzf1 ctermfg=black ctermbg=NONE
  highlight fzf2 ctermfg=black ctermbg=NONE
  highlight fzf3 ctermfg=black ctermbg=NONE
  setlocal statusline=%#fzf1#\ >\ %#fzf2#fz%#fzf3#f
endfunction

autocmd! User FzfStatusLine call <SID>fzf_statusline()

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  let g:gitgutter_grep_command = 'ag'
endif

" let supertab be smart
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabClosePreviewOnPopupClose = 1

